import { S as SvelteComponentDev, a as init, s as safe_not_equal, d as dispatch_dev, H as globals, v as validate_slots, q as createEventDispatcher, X as onDestroy, e as element, A as space, B as text, r as create_component, b as claim_element, f as children, g as detach_dev, C as claim_space, D as claim_text, x as claim_component, J as src_url_equal, h as attr_dev, j as add_location, k as insert_hydration_dev, E as append_hydration_dev, y as mount_component, G as set_data_dev, t as transition_in, n as add_render_callback, a2 as create_in_transition, p as transition_out, z as destroy_component } from './client.6837ece9.js';
import { B as Button, b as scale } from './Button.b005cc67.js';

/* src\routes\[id].svelte generated by Svelte v3.44.3 */

const { Error: Error_1 } = globals;
const file = "src\\routes\\[id].svelte";

// (39:4) <Button href="mailto:{loadedMeetup.contactEmail}">
function create_default_slot_1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Contact");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Contact");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(39:4) <Button href=\\\"mailto:{loadedMeetup.contactEmail}\\\">",
		ctx
	});

	return block;
}

// (40:4) <Button type="button" mode="outline" href="/">
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Close");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Close");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(40:4) <Button type=\\\"button\\\" mode=\\\"outline\\\" href=\\\"/\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let section;
	let div0;
	let img;
	let img_src_value;
	let img_alt_value;
	let t0;
	let div1;
	let h1;
	let t1_value = /*loadedMeetup*/ ctx[0].title + "";
	let t1;
	let t2;
	let h2;
	let t3_value = /*loadedMeetup*/ ctx[0].subtitle + "";
	let t3;
	let t4;
	let t5_value = /*loadedMeetup*/ ctx[0].address + "";
	let t5;
	let t6;
	let p;
	let t7_value = /*loadedMeetup*/ ctx[0].description + "";
	let t7;
	let t8;
	let button0;
	let t9;
	let button1;
	let section_intro;
	let current;

	button0 = new Button({
			props: {
				href: "mailto:" + /*loadedMeetup*/ ctx[0].contactEmail,
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1 = new Button({
			props: {
				type: "button",
				mode: "outline",
				href: "/",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			section = element("section");
			div0 = element("div");
			img = element("img");
			t0 = space();
			div1 = element("div");
			h1 = element("h1");
			t1 = text(t1_value);
			t2 = space();
			h2 = element("h2");
			t3 = text(t3_value);
			t4 = text(" - ");
			t5 = text(t5_value);
			t6 = space();
			p = element("p");
			t7 = text(t7_value);
			t8 = space();
			create_component(button0.$$.fragment);
			t9 = space();
			create_component(button1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div0 = claim_element(section_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true, class: true });
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(section_nodes);
			div1 = claim_element(section_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h1 = claim_element(div1_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, t1_value);
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div1_nodes);
			h2 = claim_element(div1_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t3 = claim_text(h2_nodes, t3_value);
			t4 = claim_text(h2_nodes, " - ");
			t5 = claim_text(h2_nodes, t5_value);
			h2_nodes.forEach(detach_dev);
			t6 = claim_space(div1_nodes);
			p = claim_element(div1_nodes, "P", { class: true });
			var p_nodes = children(p);
			t7 = claim_text(p_nodes, t7_value);
			p_nodes.forEach(detach_dev);
			t8 = claim_space(div1_nodes);
			claim_component(button0.$$.fragment, div1_nodes);
			t9 = claim_space(div1_nodes);
			claim_component(button1.$$.fragment, div1_nodes);
			div1_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (!src_url_equal(img.src, img_src_value = /*loadedMeetup*/ ctx[0].imageURL)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*loadedMeetup*/ ctx[0].title);
			attr_dev(img, "class", "svelte-8ez2ph");
			add_location(img, file, 32, 4, 891);
			attr_dev(div0, "class", "image svelte-8ez2ph");
			add_location(div0, file, 31, 2, 866);
			attr_dev(h1, "class", "svelte-8ez2ph");
			add_location(h1, file, 35, 4, 992);
			attr_dev(h2, "class", "svelte-8ez2ph");
			add_location(h2, file, 36, 4, 1027);
			attr_dev(p, "class", "svelte-8ez2ph");
			add_location(p, file, 37, 4, 1090);
			attr_dev(div1, "class", "content svelte-8ez2ph");
			add_location(div1, file, 34, 2, 965);
			attr_dev(section, "class", "svelte-8ez2ph");
			add_location(section, file, 30, 0, 827);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, section, anchor);
			append_hydration_dev(section, div0);
			append_hydration_dev(div0, img);
			append_hydration_dev(section, t0);
			append_hydration_dev(section, div1);
			append_hydration_dev(div1, h1);
			append_hydration_dev(h1, t1);
			append_hydration_dev(div1, t2);
			append_hydration_dev(div1, h2);
			append_hydration_dev(h2, t3);
			append_hydration_dev(h2, t4);
			append_hydration_dev(h2, t5);
			append_hydration_dev(div1, t6);
			append_hydration_dev(div1, p);
			append_hydration_dev(p, t7);
			append_hydration_dev(div1, t8);
			mount_component(button0, div1, null);
			append_hydration_dev(div1, t9);
			mount_component(button1, div1, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*loadedMeetup*/ 1 && !src_url_equal(img.src, img_src_value = /*loadedMeetup*/ ctx[0].imageURL)) {
				attr_dev(img, "src", img_src_value);
			}

			if (!current || dirty & /*loadedMeetup*/ 1 && img_alt_value !== (img_alt_value = /*loadedMeetup*/ ctx[0].title)) {
				attr_dev(img, "alt", img_alt_value);
			}

			if ((!current || dirty & /*loadedMeetup*/ 1) && t1_value !== (t1_value = /*loadedMeetup*/ ctx[0].title + "")) set_data_dev(t1, t1_value);
			if ((!current || dirty & /*loadedMeetup*/ 1) && t3_value !== (t3_value = /*loadedMeetup*/ ctx[0].subtitle + "")) set_data_dev(t3, t3_value);
			if ((!current || dirty & /*loadedMeetup*/ 1) && t5_value !== (t5_value = /*loadedMeetup*/ ctx[0].address + "")) set_data_dev(t5, t5_value);
			if ((!current || dirty & /*loadedMeetup*/ 1) && t7_value !== (t7_value = /*loadedMeetup*/ ctx[0].description + "")) set_data_dev(t7, t7_value);
			const button0_changes = {};
			if (dirty & /*loadedMeetup*/ 1) button0_changes.href = "mailto:" + /*loadedMeetup*/ ctx[0].contactEmail;

			if (dirty & /*$$scope*/ 2) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};

			if (dirty & /*$$scope*/ 2) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);

			if (!section_intro) {
				add_render_callback(() => {
					section_intro = create_in_transition(section, scale, { delay: 300 });
					section_intro.start();
				});
			}

			current = true;
		},
		o: function outro(local) {
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			destroy_component(button0);
			destroy_component(button1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload(page) {
	const meetupId = page.params.id;

	return this.fetch(`https://meetups-e2e4b-default-rtdb.firebaseio.com/meetups/${meetupId}.json`).then(res => {
		if (!res.ok) {
			throw new Error('Fetching meetups failed, please try again later!');
		}

		return res.json();
	}).then(meetupData => {
		return {
			loadedMeetup: { ...meetupData, id: meetupId }
		};
	}).catch(error => {
		this.error(404, 'Could not load meetup!');
	});
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('U5Bidu5D', slots, []);
	let { loadedMeetup } = $$props;
	const writable_props = ['loadedMeetup'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<U5Bidu5D> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('loadedMeetup' in $$props) $$invalidate(0, loadedMeetup = $$props.loadedMeetup);
	};

	$$self.$capture_state = () => ({
		preload,
		Button,
		createEventDispatcher,
		onDestroy,
		scale,
		loadedMeetup
	});

	$$self.$inject_state = $$props => {
		if ('loadedMeetup' in $$props) $$invalidate(0, loadedMeetup = $$props.loadedMeetup);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [loadedMeetup];
}

class U5Bidu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { loadedMeetup: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Bidu5D",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*loadedMeetup*/ ctx[0] === undefined && !('loadedMeetup' in props)) {
			console.warn("<U5Bidu5D> was created without expected prop 'loadedMeetup'");
		}
	}

	get loadedMeetup() {
		throw new Error_1("<U5Bidu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set loadedMeetup(value) {
		throw new Error_1("<U5Bidu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { U5Bidu5D as default, preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiX2lkXy5hNmMyN2YzNi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9baWRdLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0IGNvbnRleHQ9XCJtb2R1bGVcIj5cclxuICBleHBvcnQgZnVuY3Rpb24gcHJlbG9hZChwYWdlKSB7XHJcbiAgICBjb25zdCBtZWV0dXBJZCA9IHBhZ2UucGFyYW1zLmlkO1xyXG5cclxuICAgIHJldHVybiB0aGlzLmZldGNoKFxyXG4gICAgICBgaHR0cHM6Ly9tZWV0dXBzLWUyZTRiLWRlZmF1bHQtcnRkYi5maXJlYmFzZWlvLmNvbS9tZWV0dXBzLyR7bWVldHVwSWR9Lmpzb25gXHJcbiAgICApXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICBpZiAoIXJlcy5vaykge1xyXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGZXRjaGluZyBtZWV0dXBzIGZhaWxlZCwgcGxlYXNlIHRyeSBhZ2FpbiBsYXRlciEnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC50aGVuKChtZWV0dXBEYXRhKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgbG9hZGVkTWVldHVwOiB7IC4uLm1lZXR1cERhdGEsIGlkOiBtZWV0dXBJZCB9IH07XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICB0aGlzLmVycm9yKDQwNCwgJ0NvdWxkIG5vdCBsb2FkIG1lZXR1cCEnKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG48L3NjcmlwdD5cclxuXHJcbjxzY3JpcHQ+XHJcbiAgaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9jb21wb25lbnRzL1VJL0J1dHRvbi5zdmVsdGUnO1xyXG4gIGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciwgb25EZXN0cm95IH0gZnJvbSAnc3ZlbHRlJztcclxuICBpbXBvcnQgeyBzY2FsZSB9IGZyb20gJ3N2ZWx0ZS90cmFuc2l0aW9uJztcclxuXHJcbiAgZXhwb3J0IGxldCBsb2FkZWRNZWV0dXA7XHJcbjwvc2NyaXB0PlxyXG5cclxuPHNlY3Rpb24gaW46c2NhbGU9e3sgZGVsYXk6IDMwMCB9fT5cclxuICA8ZGl2IGNsYXNzPVwiaW1hZ2VcIj5cclxuICAgIDxpbWcgc3JjPXtsb2FkZWRNZWV0dXAuaW1hZ2VVUkx9IGFsdD17bG9hZGVkTWVldHVwLnRpdGxlfSAvPlxyXG4gIDwvZGl2PlxyXG4gIDxkaXYgY2xhc3M9XCJjb250ZW50XCI+XHJcbiAgICA8aDE+e2xvYWRlZE1lZXR1cC50aXRsZX08L2gxPlxyXG4gICAgPGgyPntsb2FkZWRNZWV0dXAuc3VidGl0bGV9IC0ge2xvYWRlZE1lZXR1cC5hZGRyZXNzfTwvaDI+XHJcbiAgICA8cD57bG9hZGVkTWVldHVwLmRlc2NyaXB0aW9ufTwvcD5cclxuICAgIDxCdXR0b24gaHJlZj1cIm1haWx0bzp7bG9hZGVkTWVldHVwLmNvbnRhY3RFbWFpbH1cIj5Db250YWN0PC9CdXR0b24+XHJcbiAgICA8QnV0dG9uIHR5cGU9XCJidXR0b25cIiBtb2RlPVwib3V0bGluZVwiIGhyZWY9XCIvXCI+Q2xvc2U8L0J1dHRvbj5cclxuICA8L2Rpdj5cclxuPC9zZWN0aW9uPlxyXG5cclxuPHN0eWxlPlxyXG4gIHNlY3Rpb24ge1xyXG4gICAgbWFyZ2luLXRvcDogNHJlbTtcclxuICB9XHJcblxyXG4gIC5pbWFnZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMjVyZW07XHJcbiAgfVxyXG5cclxuICBpbWcge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICB9XHJcblxyXG4gIC5pbWFnZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZTdlN2U3O1xyXG4gIH1cclxuXHJcbiAgLmNvbnRlbnQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICB9XHJcblxyXG4gIGgxIHtcclxuICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvIFNsYWInLCBzYW5zLXNlcmlmO1xyXG4gICAgbWFyZ2luOiAwLjVyZW0gMDtcclxuICB9XHJcblxyXG4gIGgyIHtcclxuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcclxuICAgIGNvbG9yOiAjNmI2YjZiO1xyXG4gIH1cclxuXHJcbiAgcCB7XHJcbiAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICB9XHJcbjwvc3R5bGU+XHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztZQXNDc0QsU0FBTzs7O3lCQUFQLFNBQU87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztZQUNYLE9BQUs7Ozt5QkFBTCxPQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aUNBSjlDLEdBQVksSUFBQyxLQUFLOzs7O2lDQUNsQixHQUFZLElBQUMsUUFBUTs7O2lDQUFLLEdBQVksSUFBQyxPQUFPOzs7O2lDQUMvQyxHQUFZLElBQUMsV0FBVzs7Ozs7Ozs7Ozs7dUNBQ04sR0FBWSxJQUFDLFlBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzthQUZwQixLQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs2QkFBSCxLQUFHOzs7Ozs7Ozs7Ozs7Ozs7OztnRUFKcEIsR0FBWSxJQUFDLFFBQVE7eURBQU8sR0FBWSxJQUFDLEtBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBRjVELG9CQVdVO0dBVlIsb0JBRU07R0FESixvQkFBNEQ7O0dBRTlELG9CQU1NO0dBTEosb0JBQTZCOzs7R0FDN0Isb0JBQXlEOzs7OztHQUN6RCxvQkFBaUM7Ozs7Ozs7OzswR0FMdkIsR0FBWSxJQUFDLFFBQVE7Ozs7cUdBQU8sR0FBWSxJQUFDLEtBQUs7Ozs7NkZBR25ELEdBQVksSUFBQyxLQUFLOzZGQUNsQixHQUFZLElBQUMsUUFBUTs2RkFBSyxHQUFZLElBQUMsT0FBTzs2RkFDL0MsR0FBWSxJQUFDLFdBQVc7O3VGQUNOLEdBQVksSUFBQyxZQUFZOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzREQVI5QixLQUFLLEVBQUUsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1NBN0JiLE9BQU8sQ0FBQyxJQUFJO09BQ3BCLFFBQVEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUU7O1FBRXhCLElBQUksQ0FBQyxLQUFLLDhEQUM4QyxRQUFRLFNBRXBFLElBQUksQ0FBRSxHQUFHO09BQ0gsR0FBRyxDQUFDLEVBQUU7YUFDQyxLQUFLLENBQUMsa0RBQWtEOzs7U0FFN0QsR0FBRyxDQUFDLElBQUk7SUFFaEIsSUFBSSxDQUFFLFVBQVU7O0dBQ04sWUFBWSxPQUFPLFVBQVUsRUFBRSxFQUFFLEVBQUUsUUFBUTs7SUFFckQsS0FBSyxDQUFFLEtBQUs7RUFDWCxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSx3QkFBd0I7Ozs7Ozs7T0FVbkMsWUFBWTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
